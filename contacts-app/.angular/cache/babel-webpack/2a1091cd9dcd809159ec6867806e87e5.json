{"ast":null,"code":"import _asyncToGenerator from \"/Users/nstefano/Documents/ng-strapi/contacts-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst HEADERS = {\n  'Content-Type': 'application/json'\n};\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  register(user) {\n    return _asyncToGenerator(function* () {\n      // const registerInfo$ = this.httpClient.post(\"http://localhost:1337/auth/local/register\", {\n      //     username: user.username,\n      //     email: user.email,\n      //     password: user.password,\n      // }).subscribe(\n      //     data => console.log(\"s\", data),\n      //     error => console.log(\"E\", error)\n      // );\n      const checkStatus = resp => {\n        console.log(resp);\n      };\n\n      try {\n        yield fetch('http://localhost:1337/auth/local/register', {\n          method: 'POST',\n          headers: HEADERS,\n          body: JSON.stringify(user)\n        }).then(checkStatus);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/nstefano/Documents/ng-strapi/contacts-app/src/app/shared/services/auth/auth.service.ts"],"names":["i0","i1","HEADERS","AuthService","constructor","httpClient","register","user","checkStatus","resp","console","log","fetch","method","headers","body","JSON","stringify","then","error","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,OAAO,GAAG;AACZ,kBAAgB;AADJ,CAAhB;AAGA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACKC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AAAA;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,WAAW,GAAIC,IAAD,IAAU;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAFD;;AAGA,UAAI;AACA,cAAMG,KAAK,CAAC,2CAAD,EAA8C;AACrDC,UAAAA,MAAM,EAAE,MAD6C;AAErDC,UAAAA,OAAO,EAAEZ,OAF4C;AAGrDa,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf;AAH+C,SAA9C,CAAL,CAKDW,IALC,CAKIV,WALJ,CAAN;AAMH,OAPD,CAQA,OAAOW,KAAP,EAAc;AACVT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AAtBgB;AAuBpB;;AA3BoB;;AA6BzBhB,WAAW,CAACiB,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAInB,WAAV,EAAuBH,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACArB,WAAW,CAACsB,KAAZ,GAAoB,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,WAAT;AAAsByB,EAAAA,OAAO,EAAEzB,WAAW,CAACiB,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst HEADERS = {\n    'Content-Type': 'application/json',\n};\nexport class AuthService {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    async register(user) {\n        // const registerInfo$ = this.httpClient.post(\"http://localhost:1337/auth/local/register\", {\n        //     username: user.username,\n        //     email: user.email,\n        //     password: user.password,\n        // }).subscribe(\n        //     data => console.log(\"s\", data),\n        //     error => console.log(\"E\", error)\n        // );\n        const checkStatus = (resp) => {\n            console.log(resp);\n        };\n        try {\n            await fetch('http://localhost:1337/auth/local/register', {\n                method: 'POST',\n                headers: HEADERS,\n                body: JSON.stringify(user)\n            })\n                .then(checkStatus);\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n}\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient)); };\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}