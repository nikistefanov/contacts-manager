{"ast":null,"code":"import _asyncToGenerator from \"/Users/nstefano/Documents/ng-strapi/contacts-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n\n  register(user) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        _this.httpClient.post(\"http://localhost:1337/auth/local/register\", {\n          username: user.username,\n          email: user.email,\n          password: user.password\n        }).subscribe(resp => resolve(resp)); // .subscribe((data: any) => {\n        //     resolve(data)\n        // }, (error: any) => {\n        //     resolve(error.error.data[0].messages[0].message)\n        // })\n\n      });\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/nstefano/Documents/ng-strapi/contacts-app/src/app/shared/services/auth/auth.service.ts"],"names":["i0","i1","AuthService","constructor","httpClient","register","user","Promise","resolve","reject","post","username","email","password","subscribe","resp","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACKC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AAAA;;AAAA;AACjB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAA,KAAI,CAACL,UAAL,CAAgBM,IAAhB,CAAqB,2CAArB,EAAkE;AAC9DC,UAAAA,QAAQ,EAAEL,IAAI,CAACK,QAD+C;AAE9DC,UAAAA,KAAK,EAAEN,IAAI,CAACM,KAFkD;AAG9DC,UAAAA,QAAQ,EAAEP,IAAI,CAACO;AAH+C,SAAlE,EAKKC,SALL,CAKeC,IAAI,IAAIP,OAAO,CAACO,IAAD,CAL9B,EADoC,CAOpC;AACA;AACA;AACA;AACA;;AACH,OAZM,CAAP;AADiB;AAcpB;;AAlBoB;;AAoBzBb,WAAW,CAACc,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIhB,WAAV,EAAuBF,EAAE,CAACmB,QAAH,CAAYlB,EAAE,CAACmB,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAlB,WAAW,CAACmB,KAAZ,GAAoB,aAAcrB,EAAE,CAACsB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,WAAT;AAAsBsB,EAAAA,OAAO,EAAEtB,WAAW,CAACc,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n    constructor(httpClient) {\n        this.httpClient = httpClient;\n    }\n    async register(user) {\n        return new Promise((resolve, reject) => {\n            this.httpClient.post(\"http://localhost:1337/auth/local/register\", {\n                username: user.username,\n                email: user.email,\n                password: user.password,\n            })\n                .subscribe(resp => resolve(resp));\n            // .subscribe((data: any) => {\n            //     resolve(data)\n            // }, (error: any) => {\n            //     resolve(error.error.data[0].messages[0].message)\n            // })\n        });\n    }\n}\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient)); };\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}